// Generated by CoffeeScript 1.8.0
(function() {
  var a, coffeescript, commentTemplate, current_time, div, duration, entries, finished_loading, h1, h3, iframe, img, initalized, input, link, locInterval, main_video_id, old_entry, p, raw, renderComment, retryAttempt, script, span, teacup, timeToSeconds, timeoutID, youtube_video;

  console.log('wakka2');

  teacup = window.window.teacup;

  span = teacup.span, div = teacup.div, a = teacup.a, h1 = teacup.h1, h3 = teacup.h3, p = teacup.p, iframe = teacup.iframe, raw = teacup.raw, script = teacup.script, coffeescript = teacup.coffeescript, link = teacup.link, input = teacup.input, img = teacup.img;

  old_entry = null;

  youtube_video = /(youtube.com|youtu\.be)\/(watch\?|embed\/|v\/|e\/|)(v=)?([^\#\&\?]*)/i;

  locInterval = function(time, next) {
    return setInterval(next, time * 1000);
  };

  timeToSeconds = function(time) {
    var elements, seconds;
    seconds = 0;
    elements = time.split(':').reverse();
    if (elements[0]) {
      seconds += parseInt(elements[0]);
    }
    if (elements[1]) {
      seconds += parseInt(elements[1]) * 60;
    }
    if (elements[2]) {
      seconds += parseInt(elements[2]) * 60 * 60;
    }
    if (elements[3]) {
      seconds += parseInt(elements[3]) * 24 * 60 * 60;
    }
    return seconds;
  };

  commentTemplate = (function(_this) {
    return function(data) {
      return teacup.render((function() {
        return div('.animated fadeIn', function() {
          a('.name', {
            href: ""
          }, function() {
            return "" + (data != null ? data.name : void 0);
          });
          return span('.description', function() {
            return raw(data.text);
          });
        });
      }));
    };
  })(this);

  timeoutID = null;

  renderComment = (function(_this) {
    return function(data) {
      var $comment;
      $comment = $("#player-api > #overlay-wrapper .comment");
      $comment.html(commentTemplate(data));
      if (timeoutID) {
        clearTimeout(timeoutID);
      }
      return timeoutID = setTimeout((function() {
        var $fadeIn;
        $fadeIn = $comment.find('.fadeIn');
        $fadeIn.toggleClass('fadeIn fadeOut');
        return $fadeIn.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
          $(this).remove();
          return old_entry = null;
        });
      }), 8000);
    };
  })(this);

  current_time = $('.ytp-time-current');

  duration = $('.ytp-time-duration');

  entries = [];

  main_video_id = youtube_video.exec(window.location.href)[4];

  initalized = false;

  finished_loading = false;

  retryAttempt = null;

  locInterval(.9, function() {
    var current_seconds, getComments, new_entry, video_id;
    console.log('WAKKA');
    if (!$("#player-api").length) {
      return;
    }
    console.log('WAKKA 2');
    if (!duration.length) {
      return;
    }
    console.log('WAKKA 3');
    if (!current_time.length) {
      return;
    }
    console.log('WAKKA 4');
    video_id = youtube_video.exec(window.location.href)[4];
    if (video_id !== main_video_id) {
      initalized = false;
    }
    if (!initalized) {
      if (retryAttempt) {
        clearTimeout(retryAttempt);
      }
      retryAttempt = setTimeout((function() {
        if (finished_loading === false) {
          console.log('init failed trying again');
          return initalized = finished_loading;
        } else {
          return console.log('init succeeded');
        }
      }), 8000);
      $("#player-api > #overlay-wrapper").remove();
      $('html').removeClass('youtube-social');
      initalized = true;
      main_video_id = youtube_video.exec(window.location.href)[4];
      getComments = (function(_this) {
        return function(num) {
          var calls, count, i, nextPageToken, _i;
          if (num == null) {
            num = 368;
          }
          nextPageToken = null;
          calls = [];
          for (i = _i = 0; _i <= 20; i = ++_i) {
            calls.push("https://www.googleapis.com/youtube/v3/commentThreads?part=snippet&maxResults=100&videoId=" + main_video_id + "&key=AIzaSyCOgZXFd0wj49anj5THC0bJva_oNjaBilQ");
          }
          count = 20;
          return async.eachSeries(calls, (function(call, next) {
            if (nextPageToken) {
              call += "&pageToken=" + nextPageToken;
            }
            console.log('CALL HAPPENED' + call);
            return $.getJSON(call, (function(_this) {
              return function(data) {
                var content, entry, matches, seconds, spot, _j, _len, _ref, _ref1;
                if (!(data != null ? (_ref = data.items) != null ? _ref.length : void 0 : void 0)) {
                  return next();
                }
                _ref1 = data != null ? data.items : void 0;
                for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
                  entry = _ref1[_j];
                  content = entry.snippet.topLevelComment.snippet.textDisplay;
                  matches = content.match(/(\d+:[\d:]+)/g);
                  spot = matches != null ? matches[0] : void 0;
                  if (!spot) {
                    continue;
                  }
                  if ((matches != null ? matches.length : void 0) > 1) {
                    continue;
                  }
                  seconds = timeToSeconds(spot);
                  entries[seconds] = {
                    text: content,
                    name: entry.snippet.topLevelComment.snippet.authorDisplayName,
                    image_link: entry.snippet.topLevelComment.snippet.authorProfileImageUrl,
                    image: entry.snippet.topLevelComment.snippet.authorProfileImageUrl,
                    total: entry
                  };
                }
                nextPageToken = data.nextPageToken;
                return next();
              };
            })(this));
          }), function(err, finish) {
            var $image;
            console.log('3');
            finished_loading = true;
            $("#player-api > #overlay-wrapper").remove();
            $("#player-api").append(teacup.render(((function(_this) {
              return function() {
                return div('#overlay-wrapper', function() {
                  div('.images', function() {
                    var entry, img_cls, key, left, _results;
                    _results = [];
                    for (key in entries) {
                      entry = entries[key];
                      if (!entry) {
                        continue;
                      }
                      left = (key / timeToSeconds(duration.text())) * 100;
                      if (entry.image) {
                        img_cls = '.image';
                        if (left > 100) {
                          img_cls += '.wtf';
                        }
                        _results.push(div('.image', {
                          'key': key,
                          style: "left: " + left + "%;"
                        }, function() {
                          img({
                            src: "" + entry.image
                          });
                          return div('.image-hover', function() {
                            return img({
                              src: "" + entry.image
                            });
                          });
                        }));
                      } else {
                        _results.push(void 0);
                      }
                    }
                    return _results;
                  });
                  return div('.comment-wrapper', function() {
                    div('.comment');
                    return div('.hover-comment');
                  });
                });
              };
            })(this))));
            if (entries.length) {
              $('html').addClass('youtube-social');
            } else {
              $('html').removeClass('youtube-social');
            }
            $image = $("#player-api #overlay-wrapper .images > .image");
            $image.mouseenter(function(e) {
              var $el, $hover, data;
              $el = $(e.currentTarget);
              data = entries[$el.attr('key')];
              $hover = $el.closest('#overlay-wrapper').find('.hover-comment');
              $hover.html(commentTemplate(data));
              return $hover.siblings('.comment').hide();
            });
            return $image.mouseleave(function(e) {
              var $el, $fadeIn, $hover;
              $el = $(e.currentTarget);
              $hover = $el.closest('#overlay-wrapper').find('.hover-comment');
              $fadeIn = $hover.find('.fadeIn');
              $fadeIn.toggleClass('fadeIn fadeOut');
              return $fadeIn.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
                $(this).remove();
                return $hover.siblings('.comment').show();
              });
            });
          });
        };
      })(this);
      return chrome.runtime.sendMessage({
        id: main_video_id,
        type: 'youtube-stats'
      }, function(data) {
        var comments, _ref, _ref1;
        comments = Math.max(1000, data != null ? (_ref = data.items[0]) != null ? (_ref1 = _ref.statistics) != null ? _ref1.commentCount : void 0 : void 0 : void 0);
        return getComments();
      });
    } else {
      current_seconds = timeToSeconds(current_time.text());
      new_entry = entries[current_seconds];
      if (new_entry && old_entry !== new_entry) {
        old_entry = new_entry;
        return renderComment(new_entry);
      }
    }
  });

}).call(this);
